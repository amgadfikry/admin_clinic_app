services:
  # Front-end_user service (user dashboard)
  frontend_user:
    container_name: frontend_user
    build: ./front-end_user
    restart: always
    networks:
      - frontend-server
    ports:
      - 5174:5174
    volumes:
      - ./front-end_user:/app
    environment:
      - NODE_ENV=dev
    #env_file:
      #- ./frontend/.env
    depends_on:
      - server
    expose:
      - 5174
    command: npm run dev -- --port 5174 --host

  # Front-end_admin service (admin dashboard)
  frontend_admin:
    container_name: frontend_admin
    build: ./front-end_admin
    restart: always
    networks:
      - frontend-server
    ports:
      - 5173:5173
    volumes:
      - ./front-end_admin:/app
    environment:
      - NODE_ENV=dev
    #env_file:
      #- ./frontend/.env
    depends_on:
      - server
    expose:
      - 5173
    command: npm run dev -- --host

  # back-end servive (server)
  server:
    container_name: server
    build: ./back-end
    restart: always
    networks:
      frontend-server:
        ipv4_address: 172.29.0.6
      mysql-server:
    ports:
      - 5000:5000
    volumes:
      - ./back-end:/app
    environment:
      - SERVER_RUN=dev
    #env_file:
      #- ./back-end/.env
    depends_on:
      mysql:
        condition: service_healthy
    command: python -m api.app --debug

  # mysql service (database)
  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    networks:
      - mysql-server
    ports:
      - 3306:3306
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - mysqldb:/var/lib/mysql
      - ./back-end/init_test_database.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root"]
      interval: 30s
      timeout: 10s
      retries: 50

# network configurations
networks:
  # frontend-server network
  frontend-server:
    driver: bridge
    name: frontend-server
    ipam:
      driver: default
      config:
        - subnet: 172.29.0.0/16
  # mysql-server network
  mysql-server:
    driver: bridge
    name: mysql-server

# volumes configuration
volumes:
  mysqldb:
    name: mysqldb
